{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed9cb192.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ( {color, text, onClick } ) => {\n    \n    \n    return (\n    <button onClick={onClick} style={{backgroundColor: color}}\n    className='btn'>{text}\n    </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue',\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({title, onAdd, showAdd}) => {\n    \n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button color={showAdd ? 'orange' : 'green'} \n            text={showAdd ? 'Close' : 'Add'} \n            onClick={onAdd}\n            />\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n//CSS in JS\n// const headingStyle = {\n// color: 'red',\n// backgroundColor: 'black',\n// }    \n\n\nexport default Header\n","import {FaTimes} from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} \n        onDoubleClick={()=> onToggle(task.id)}>\n            <h3>{task.text} \n            <FaTimes style={{color: 'red' , cursor:'pointer'}} \n            onClick={() => onDelete(task.id)}\n            />\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task","import Task from './Task'\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n    \n\n    return (\n        <>\n          {tasks.map((task) => (\n          <Task key={task.id} \n          task={task} \n          onDelete={onDelete} \n          onToggle={onToggle}/>\n          ))}  \n        </>\n    )\n}\n\nexport default Tasks","import { useState } from 'react'\n\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState('false')\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text) {\n            alert('Please add a task')\n            return\n        }\n\n        onAdd({ text, day, reminder})\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input \n                type='text' \n                placeholder='Add Task' \n                value={text} \n                onChange={(e)=> setText(e.target.value)}\n                />\n            </div>\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input \n                type='text' \n                placeholder='Add Day & Time' \n                value={day} \n                onChange={(e)=> setDay(e.target.value)}\n                />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input \n                type='checkbox' \n                checked={reminder}\n                value={reminder} \n                onChange={(e)=> setReminder(e.currentTarget.checked)}\n                />\n            </div>\n            <input type='submit' value='Save Task' className='btn btn-block'/>\n            \n        </form>\n            \n    )\n}\n\nexport default AddTask","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport { useState } from 'react'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'something 1',\n        day: 'Feb 5th at 2:30pm',\n        reminder: 'false',\n    },\n    {\n        id: 2,\n        text: 'something 2',\n        day: 'Feb 5th at 4:30pm',\n        reminder: 'false',\n    },\n    {\n        id: 3,\n        text: 'something 3',\n        day: 'Feb 3th at 6:30pm',\n        reminder: 'false',\n    },\n    ])\n\n  //Add Task \n  const addTask = (task) => {\n    const id = Math.floor(Math.random()*10000)+1\n\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    //console.log('delete', id);\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n  \n  //Togle Reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map(task => task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n\n  \n  return (\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length >0 ?\n      ( <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> \n        ) : ( \n          'No Tasks npmTo Show'\n          )}\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}